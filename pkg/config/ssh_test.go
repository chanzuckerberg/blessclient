package config_test

import (
	"fmt"
	"testing"

	"github.com/chanzuckerberg/blessclient/pkg/config"
	"github.com/stretchr/testify/require"
)

func TestSSHConfig(t *testing.T) {
	t.Parallel()
	r := require.New(t)

	sshConf := &config.SSHConfig{
		Bastions: []config.Bastion{
			config.Bastion{},
		},
	}

	r.Equal("blessclient run", sshConf.Bastions[0].SSHExecCommand.String())

	s, err := sshConf.String()
	r.Nil(err)
	r.Contains(s, "######### Generated by blessclient vundefined+undefined-dirty at")
	r.Contains(s, fmt.Sprint("exec \"blessclient run\""))
}

func TestCustomExecCommand(t *testing.T) {
	t.Parallel()
	r := require.New(t)

	contents := "test custom exec command"
	expected := config.SSHExecCommand(contents)

	sshConf := &config.SSHConfig{
		Bastions: []config.Bastion{
			{
				SSHExecCommand: &expected,
			},
		},
	}

	// Before template
	r.Equal(contents, sshConf.Bastions[0].SSHExecCommand.String())

	// Template
	s, err := sshConf.String()
	r.Nil(err)
	r.Contains(s, "######### Generated by blessclient vundefined+undefined-dirty at")
	r.Contains(s, expected.String())
	r.Contains(s, fmt.Sprintf("exec \"%s\"", contents))
}
